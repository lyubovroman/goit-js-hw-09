{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SACtCF,EAAOG,iBAAiB,UAExB,SAAkBC,GAChBA,EAAMC,iBAEN,IAAMC,EAAQN,EAAOO,MAAMC,MACrBC,EAAOT,EAAOS,KAAKD,MACnBE,EAASV,EAAOU,OAAOF,MAE7B,SAASG,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAErCC,YAAW,WACRH,EACFF,EAAQ,CAAEF,WAAUL,UAEpBQ,EAAO,CAAEH,WAAUL,S,GAEpBA,E,IAIL,IAAK,IAAIa,EAAI,EAAGA,EAAIV,EAAQU,GAAK,EAAG,CAGpCT,EAFqBS,EACAd,EADAc,EACmBX,GAErCY,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUL,EAAKe,EAALf,MACjBgB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANnB,EAAM,M,IAEvEoB,OAAM,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUL,EAAKe,EAALf,MAClBgB,EAAAzB,GAAS0B,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANnB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const delay = formEl.delay.value;\n  const step = formEl.step.value;\n  const amount = formEl.amount.value;\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        \n         setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n    for (let i = 0; i < amount; i += 1) {\n        const position = i;\n        const newDelay = delay + position * step;\n    createPromise(position, newDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n\n\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// const form = document.querySelector('.form');\n\n// form.addEventListener('submit', event => {\n//   event.preventDefault();\n//   const delay = parseInt(form.elements.delay.value);\n//   const step = parseInt(form.elements.step.value);\n//   const amount = parseInt(form.elements.amount.value);\n\n//   for (let i = 0; i < amount; i++) {\n//     createPromise(i, delay + i * step)\n//       .then(result => console.log(`Promise ${result.position} with delay ${result.delay} fulfilled`))\n//       .catch(result => console.log(`Promise ${result.position} with delay ${result.delay} rejected`));\n// //   }\n// // });\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","event","preventDefault","delay1","delay","value","step","amount","createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.cfef682d.js.map"}